{"version":3,"sources":["components/Editor.js","components/Preview.js","components/App.js","components/ExampleText.js","index.js"],"names":["Editor","_ref","text","_text","Object","slicedToArray","userText","setUserText","react_default","a","createElement","className","htmlFor","name","id","value","onChange","e","target","renderer","marked","Renderer","link","href","title","concat","Preview","raw","dangerouslySetInnerHTML","__html","sanitize","breaks","App","_useState","useState","_useState2","style","marginBottom","components_Editor","components_Preview","dist_default","ReactDOM","render","components_App","document","getElementById"],"mappings":"mJAsBeA,EApBA,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAAWC,EAAAC,OAAAC,EAAA,EAAAD,CACKF,EADL,GACpBI,EADoBH,EAAA,GACVI,EADUJ,EAAA,GAE3B,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQC,QAAQ,UAAjC,cAGAJ,EAAAC,EAAAC,cAAA,YACEC,UAAU,WACVE,KAAK,SACLC,GAAG,SACHC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAAYU,EAAEC,OAAOH,6BCZxCI,EAAW,IAAIC,IAAOC,SAC5BF,EAASG,KAAO,SAACC,EAAMC,EAAOtB,GAAd,kCAAAuB,OACcF,EADd,aAAAE,OAC8BD,EAD9B,MAAAC,OACwCvB,EADxC,SAGhB,IAcewB,EAdC,SAAAzB,GAAkB,IACV0B,EADLrB,EAAeL,EAAfK,SAKjB,OACEE,EAAAC,EAAAC,cAAA,OACEI,GAAG,UACHH,UAAU,UACViB,wBAAyB,CAAEC,QARTF,EAQ+BrB,EAPtCc,IAAOO,EAAK,CAAER,WAAUW,UAAU,EAAMC,QAAQ,yBCYlDC,EAfH,WAAM,IAAAC,EACgBC,mBCPV,mQDMNC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA6B,EAAA,GACT3B,EADS6B,EAAA,GACC5B,EADD4B,EAAA,GAEhB,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2ByB,MAAO,CAAEC,aAAc,SAAhE,sBAGA7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAQpC,KAAM,CAACI,EAAUC,KACzBC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC6B,EAAD,CAASjC,SAAUA,IACnBE,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,QEXNgC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1781e630.chunk.js","sourcesContent":["import React from 'react'\n\nconst Editor = ({ text }) => {\n  const [userText, setUserText] = text\n  return (\n    <div className=\"field\">\n      <div className=\"control\">\n        <label className=\"label\" htmlFor=\"editor\">\n          Enter Text\n        </label>\n        <textarea\n          className=\"textarea\"\n          name=\"editor\"\n          id=\"editor\"\n          value={userText}\n          onChange={e => setUserText(e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Editor\n","import React from 'react'\nimport marked from 'marked'\n\nconst renderer = new marked.Renderer()\nrenderer.link = (href, title, text) =>\n  `<a target=\"_blank\" href=\"${href}\" title=\"${title}\">${text}</a>`\n\nconst Preview = ({ userText }) => {\n  const parseMarkdown = raw => {\n    let markup = marked(raw, { renderer, sanitize: true, breaks: true })\n    return markup\n  }\n  return (\n    <div\n      id=\"preview\"\n      className=\"content\"\n      dangerouslySetInnerHTML={{ __html: parseMarkdown(userText) }}\n    />\n  )\n}\n\nexport default Preview\n","import React, { useState } from 'react'\nimport Editor from './Editor'\nimport Preview from './Preview'\nimport { ExampleText } from './ExampleText'\nimport ReactFCCtest from 'react-fcctest'\n\nconst App = () => {\n  const [userText, setUserText] = useState(ExampleText)\n  return (\n    <div className=\"container\">\n      <h1 className=\"is-size-3 has-text-right\" style={{ marginBottom: '3rem' }}>\n        Markdown Previewer\n      </h1>\n      <Editor text={[userText, setUserText]} />\n      <hr />\n      <Preview userText={userText} />\n      <ReactFCCtest />\n    </div>\n  )\n}\n\nexport default App\n","export const ExampleText = `\n# h1\n\n## h2\n\n[link to Google!](http://google.com)\n\n\n\\`some code goes here \\`\n\n\\`\\`\\`\nblock of code\ngoes here\nlike\nthis\n\\`\\`\\`\n\n- lists\n- are like\n- this\n\n**feeling bold**\n\n> don't quote me \n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma/css/bulma.css'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}